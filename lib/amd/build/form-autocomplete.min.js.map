<<<<<<< HEAD
{"version":3,"file":"form-autocomplete.min.js","sources":["../src/form-autocomplete.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Autocomplete wrapper for select2 library.\n *\n * @module     core/form-autocomplete\n * @copyright  2015 Damyon Wiese <damyon@moodle.com>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n * @since      3.0\n */\ndefine([\n    'jquery',\n    'core/log',\n    'core/str',\n    'core/templates',\n    'core/notification',\n    'core/loadingicon',\n    'core/aria',\n    'core_form/changechecker',\n    'core/popper2',\n    'theme_boost/bootstrap/dom/event-handler',\n], function(\n    $,\n    log,\n    str,\n    templates,\n    notification,\n    LoadingIcon,\n    Aria,\n    FormChangeChecker,\n    Popper,\n    EventHandler,\n) {\n    // Private functions and variables.\n    /** @var {Object} KEYS - List of keycode constants. */\n    var KEYS = {\n        DOWN: 40,\n        ENTER: 13,\n        SPACE: 32,\n        ESCAPE: 27,\n        COMMA: 44,\n        UP: 38,\n        LEFT: 37,\n        RIGHT: 39\n    };\n\n    var uniqueId = Date.now();\n\n    /**\n     * Make an item in the selection list \"active\".\n     *\n     * @method activateSelection\n     * @private\n     * @param {Number} index The index in the current (visible) list of selection.\n     * @param {Object} state State variables for this autocomplete element.\n     * @return {Promise}\n     */\n    var activateSelection = function(index, state) {\n        // Find the elements in the DOM.\n        var selectionElement = $(document.getElementById(state.selectionId));\n\n        index = wrapListIndex(index, selectionElement.children('[aria-selected=true]').length);\n        // Find the specified element.\n        var element = $(selectionElement.children('[aria-selected=true]').get(index));\n        // Create an id we can assign to this element.\n        var itemId = state.selectionId + '-' + index;\n\n        // Deselect all the selections.\n        selectionElement.children().attr('data-active-selection', null).attr('id', '');\n\n        // Select only this suggestion and assign it the id.\n        element.attr('data-active-selection', true).attr('id', itemId);\n\n        // Tell the input field it has a new active descendant so the item is announced.\n        selectionElement.attr('aria-activedescendant', itemId);\n        selectionElement.attr('data-active-value', element.attr('data-value'));\n\n        return $.Deferred().resolve();\n    };\n\n    /**\n     * Get the actively selected element from the state object.\n     *\n     * @param   {Object} state\n     * @returns {jQuery}\n     */\n    var getActiveElementFromState = function(state) {\n        var selectionRegion = $(document.getElementById(state.selectionId));\n        var activeId = selectionRegion.attr('aria-activedescendant');\n\n        if (activeId) {\n            var activeElement = $(document.getElementById(activeId));\n            if (activeElement.length) {\n                // The active descendent still exists.\n                return activeElement;\n            }\n        }\n\n        // Ensure we are creating a properly formed selector based on the active value.\n        var activeValue = selectionRegion.attr('data-active-value')?.replace(/\"/g, '\\\\\"');\n        return selectionRegion.find('[data-value=\"' + activeValue + '\"]');\n    };\n\n    /**\n     * Update the active selection from the given state object.\n     *\n     * @param   {Object} state\n     */\n    var updateActiveSelectionFromState = function(state) {\n        var activeElement = getActiveElementFromState(state);\n        var activeValue = activeElement.attr('data-value');\n\n        var selectionRegion = $(document.getElementById(state.selectionId));\n        if (activeValue) {\n            // Find the index of the currently selected index.\n            var activeIndex = selectionRegion.find('[aria-selected=true]').index(activeElement);\n\n            if (activeIndex !== -1) {\n                activateSelection(activeIndex, state);\n                return;\n            }\n        }\n\n        // Either the active index was not set, or it could not be found.\n        // Select the first value instead.\n        activateSelection(0, state);\n    };\n\n    /**\n     * Update the element that shows the currently selected items.\n     *\n     * @method updateSelectionList\n     * @private\n     * @param {Object} options Original options for this autocomplete element.\n     * @param {Object} state State variables for this autocomplete element.\n     * @param {JQuery} originalSelect The JQuery object matching the hidden select list.\n     * @return {Promise}\n     */\n    var updateSelectionList = function(options, state, originalSelect) {\n        var pendingKey = 'form-autocomplete-updateSelectionList-' + state.inputId;\n        M.util.js_pending(pendingKey);\n\n        // Build up a valid context to re-render the template.\n        var items = rebuildOptions(originalSelect.children('option:selected'), false);\n        var newSelection = $(document.getElementById(state.selectionId));\n\n        if (!hasItemListChanged(state, items)) {\n            M.util.js_complete(pendingKey);\n            return Promise.resolve();\n        }\n\n        state.items = items;\n\n        var context = $.extend(options, state);\n        // Render the template.\n        return templates.render(options.templates.items, context)\n        .then(function(html, js) {\n            // Add it to the page.\n            templates.replaceNodeContents(newSelection, html, js);\n\n            updateActiveSelectionFromState(state);\n\n            return;\n        })\n        .then(function() {\n            return M.util.js_complete(pendingKey);\n        })\n        .catch(notification.exception);\n    };\n\n    /**\n     * Check whether the list of items stored in the state has changed.\n     *\n     * @param   {Object} state\n     * @param   {Array} items\n     * @returns {Boolean}\n     */\n    var hasItemListChanged = function(state, items) {\n        if (state.items.length !== items.length) {\n            return true;\n        }\n\n        // Check for any items in the state items which are not present in the new items list.\n        return state.items.filter(item => items.indexOf(item) === -1).length > 0;\n    };\n\n    /**\n     * Notify of a change in the selection.\n     *\n     * @param {jQuery} originalSelect The jQuery object matching the hidden select list.\n     */\n    var notifyChange = function(originalSelect) {\n        FormChangeChecker.markFormChangedFromNode(originalSelect[0]);\n\n        // Note, jQuery .change() was not working here. Better to\n        // use plain JavaScript anyway.\n        originalSelect[0].dispatchEvent(new Event('change', {bubbles: true}));\n    };\n\n    /**\n     * Remove the given item from the list of selected things.\n     *\n     * @method deselectItem\n     * @private\n     * @param {Object} options Original options for this autocomplete element.\n     * @param {Object} state State variables for this autocomplete element.\n     * @param {Element} item The item to be deselected.\n     * @param {Element} originalSelect The original select list.\n     * @return {Promise}\n     */\n    var deselectItem = function(options, state, item, originalSelect) {\n        var selectedItemValue = $(item).attr('data-value');\n\n        // Preprend an empty option to the select list to avoid having a default selected option.\n        if (originalSelect.find('option').first().attr('value') !== undefined) {\n            originalSelect.prepend($('<option>'));\n        }\n\n        // Look for a match, and toggle the selected property if there is a match.\n        originalSelect.children('option').each(function(index, ele) {\n            if ($(ele).attr('value') == selectedItemValue) {\n                $(ele).prop('selected', false);\n                // We remove newly created custom tags from the suggestions list when they are deselected.\n                if ($(ele).attr('data-iscustom')) {\n                    $(ele).remove();\n                }\n            }\n        });\n        // Rerender the selection list.\n        return updateSelectionList(options, state, originalSelect)\n        .then(function() {\n            // Notify that the selection changed.\n            notifyChange(originalSelect);\n\n            return;\n        });\n    };\n\n    /**\n     * Make an item in the suggestions \"active\" (about to be selected).\n     *\n     * @method activateItem\n     * @private\n     * @param {Number} index The index in the current (visible) list of suggestions.\n     * @param {Object} state State variables for this instance of autocomplete.\n     * @return {Promise}\n     */\n    var activateItem = function(index, state) {\n        // Find the elements in the DOM.\n        var inputElement = $(document.getElementById(state.inputId));\n        var suggestionsElement = $(document.getElementById(state.suggestionsId));\n\n        // Count the visible items.\n        var length = suggestionsElement.children(':not([aria-hidden])').length;\n        // Limit the index to the upper/lower bounds of the list (wrap in both directions).\n        index = index % length;\n        while (index < 0) {\n            index += length;\n        }\n        // Find the specified element.\n        var element = $(suggestionsElement.children(':not([aria-hidden])').get(index));\n        // Find the index of this item in the full list of suggestions (including hidden).\n        var globalIndex = $(suggestionsElement.children('[role=option]')).index(element);\n        // Create an id we can assign to this element.\n        var itemId = state.suggestionsId + '-' + globalIndex;\n\n        // Deselect all the suggestions.\n        suggestionsElement.children().attr('aria-selected', false).attr('id', '');\n        // Select only this suggestion and assign it the id.\n        element.attr('aria-selected', true).attr('id', itemId);\n        // Tell the input field it has a new active descendant so the item is announced.\n        inputElement.attr('aria-activedescendant', itemId);\n\n        // Scroll it into view.\n        var scrollPos = element.offset().top\n                       - suggestionsElement.offset().top\n                       + suggestionsElement.scrollTop()\n                       - (suggestionsElement.height() / 2);\n        return suggestionsElement.animate({\n            scrollTop: scrollPos\n        }, 100).promise();\n    };\n\n    /**\n     * Return the index of the currently selected item in the suggestions list.\n     *\n     * @param {jQuery} suggestionsElement\n     * @return {Integer}\n     */\n    var getCurrentItem = function(suggestionsElement) {\n        // Find the active one.\n        var element = suggestionsElement.children('[aria-selected=true]');\n        // Find its index.\n        return suggestionsElement.children(':not([aria-hidden])').index(element);\n    };\n\n    /**\n     * Limit the index to the upper/lower bounds of the list (wrap in both directions).\n     *\n     * @param {Integer} index The target index.\n     * @param {Integer} length The length of the list of visible items.\n     * @return {Integer} The resulting index with necessary wrapping applied.\n     */\n    var wrapListIndex = function(index, length) {\n        index = index % length;\n        while (index < 0) {\n            index += length;\n        }\n        return index;\n    };\n\n    /**\n     * Return the index of the next item in the list without aria-disabled=true.\n     *\n     * @param {Integer} current The index of the current item.\n     * @param {Array} suggestions The list of suggestions.\n     * @return {Integer}\n     */\n    var getNextEnabledItem = function(current, suggestions) {\n        var nextIndex = wrapListIndex(current + 1, suggestions.length);\n        if (suggestions[nextIndex].getAttribute('aria-disabled')) {\n            return getNextEnabledItem(nextIndex, suggestions);\n        }\n        return nextIndex;\n    };\n\n    /**\n     * Return the index of the previous item in the list without aria-disabled=true.\n     *\n     * @param {Integer} current The index of the current item.\n     * @param {Array} suggestions The list of suggestions.\n     * @return {Integer}\n     */\n    var getPreviousEnabledItem = function(current, suggestions) {\n        var previousIndex = wrapListIndex(current - 1, suggestions.length);\n        if (suggestions[previousIndex].getAttribute('aria-disabled')) {\n            return getPreviousEnabledItem(previousIndex, suggestions);\n        }\n        return previousIndex;\n    };\n\n    /**\n     * Build a list of renderable options based on a set of option elements from the original select list.\n     *\n     * @param {jQuery} originalOptions\n     * @param {Boolean} includeEmpty\n     * @return {Array}\n     */\n    var rebuildOptions = function(originalOptions, includeEmpty) {\n        var options = [];\n        originalOptions.each(function(index, ele) {\n            var label;\n            if ($(ele).data('html')) {\n                label = $(ele).data('html');\n            } else {\n                label = $(ele).html();\n            }\n            if (includeEmpty || label !== '') {\n                options.push({\n                    label: label,\n                    value: $(ele).attr('value'),\n                    disabled: ele.disabled,\n                    classes: ele.classList,\n                });\n            }\n        });\n        return options;\n    };\n\n    /**\n     * Find the index of the current active suggestion, and activate the next one.\n     *\n     * @method activateNextItem\n     * @private\n     * @param {Object} state State variable for this auto complete element.\n     * @return {Promise}\n     */\n    var activateNextItem = function(state) {\n        // Find the list of suggestions.\n        var suggestionsElement = $(document.getElementById(state.suggestionsId));\n        var suggestions = suggestionsElement.children(':not([aria-hidden])');\n        var current = getCurrentItem(suggestionsElement);\n        // Activate the next one.\n        return activateItem(getNextEnabledItem(current, suggestions), state);\n    };\n\n    /**\n     * Find the index of the current active selection, and activate the previous one.\n     *\n     * @method activatePreviousSelection\n     * @private\n     * @param {Object} state State variables for this instance of autocomplete.\n     * @return {Promise}\n     */\n    var activatePreviousSelection = function(state) {\n        // Find the list of selections.\n        var selectionsElement = $(document.getElementById(state.selectionId));\n        // Find the active one.\n        var element = selectionsElement.children('[data-active-selection]');\n        if (!element) {\n            return activateSelection(0, state);\n        }\n        // Find it's index.\n        var current = selectionsElement.children('[aria-selected=true]').index(element);\n        // Activate the next one.\n        return activateSelection(current - 1, state);\n    };\n\n    /**\n     * Find the index of the current active selection, and activate the next one.\n     *\n     * @method activateNextSelection\n     * @private\n     * @param {Object} state State variables for this instance of autocomplete.\n     * @return {Promise}\n     */\n    var activateNextSelection = function(state) {\n        // Find the list of selections.\n        var selectionsElement = $(document.getElementById(state.selectionId));\n\n        // Find the active one.\n        var element = selectionsElement.children('[data-active-selection]');\n        var current = 0;\n\n        if (element) {\n            // The element was found. Determine the index and move to the next one.\n            current = selectionsElement.children('[aria-selected=true]').index(element);\n            current = current + 1;\n        } else {\n            // No selected item found. Move to the first.\n            current = 0;\n        }\n\n        return activateSelection(current, state);\n    };\n\n    /**\n     * Find the index of the current active suggestion, and activate the previous one.\n     *\n     * @method activatePreviousItem\n     * @private\n     * @param {Object} state State variables for this autocomplete element.\n     * @return {Promise}\n     */\n    var activatePreviousItem = function(state) {\n        var suggestionsElement = $(document.getElementById(state.suggestionsId));\n        var suggestions = suggestionsElement.children(':not([aria-hidden])');\n        var current = getCurrentItem(suggestionsElement);\n        // Activate the previous one.\n        return activateItem(getPreviousEnabledItem(current, suggestions), state);\n    };\n\n    /**\n     * Close the list of suggestions.\n     *\n     * @method closeSuggestions\n     * @private\n     * @param {Object} state State variables for this autocomplete element.\n     * @return {Promise}\n     */\n    var closeSuggestions = function(state) {\n        // Find the elements in the DOM.\n        var inputElement = $(document.getElementById(state.inputId));\n        var suggestionsElement = $(document.getElementById(state.suggestionsId));\n\n        if (inputElement.attr('aria-expanded') === \"true\") {\n            // Announce the list of suggestions was closed.\n            inputElement.attr('aria-expanded', false);\n        }\n        // Read the current list of selections.\n        inputElement.attr('aria-activedescendant', state.selectionId);\n\n        // Hide the suggestions list (from screen readers too).\n        Aria.hide(suggestionsElement.get());\n        suggestionsElement.hide();\n\n        return $.Deferred().resolve();\n    };\n\n    /**\n     * Rebuild the list of suggestions based on the current values in the select list, and the query.\n     * Any options in the original select with [data-enabled=disabled] will not be included\n     * as a suggestion option in the enhanced field.\n     *\n     * @method updateSuggestions\n     * @private\n     * @param {Object} options The original options for this autocomplete.\n     * @param {Object} state The state variables for this autocomplete.\n     * @param {String} query The current text for the search string.\n     * @param {JQuery} originalSelect The JQuery object matching the hidden select list.\n     * @return {Promise}\n     */\n    var updateSuggestions = function(options, state, query, originalSelect) {\n        var pendingKey = 'form-autocomplete-updateSuggestions-' + state.inputId;\n        M.util.js_pending(pendingKey);\n\n        // Find the elements in the DOM.\n        var inputElement = $(document.getElementById(state.inputId));\n        var suggestionsElement = $(document.getElementById(state.suggestionsId));\n\n        // Used to track if we found any visible suggestions.\n        var matchingElements = false;\n        // Options is used by the context when rendering the suggestions from a template.\n        var suggestions = rebuildOptions(originalSelect.children('option:not(:selected, [data-enabled=\"disabled\"])'), true);\n\n        // Re-render the list of suggestions.\n        var searchquery = state.caseSensitive ? query : query.toLocaleLowerCase();\n        var context = $.extend({options: suggestions}, options, state);\n        var returnVal = templates.render(\n            'core/form_autocomplete_suggestions',\n            context\n        )\n        .then(function(html, js) {\n            // We have the new template, insert it in the page.\n            templates.replaceNode(suggestionsElement, html, js);\n\n            // Get the element again.\n            suggestionsElement = $(document.getElementById(state.suggestionsId));\n\n            // Show it if it is hidden.\n            Aria.unhide(suggestionsElement.get());\n            Popper.createPopper(inputElement[0], suggestionsElement[0], {\n                placement: 'bottom-start',\n                modifiers: [{name: 'flip', enabled: false}],\n            });\n\n            // For each option in the list, hide it if it doesn't match the query.\n            suggestionsElement.children().each(function(index, node) {\n                node = $(node);\n                if ((options.caseSensitive && node.text().indexOf(searchquery) > -1) ||\n                        (!options.caseSensitive && node.text().toLocaleLowerCase().indexOf(searchquery) > -1)) {\n                    Aria.unhide(node.get());\n                    node.show();\n                    matchingElements = true;\n                } else {\n                    node.hide();\n                    Aria.hide(node.get());\n                }\n            });\n            // If we found any matches, show the list.\n            inputElement.attr('aria-expanded', true);\n            if (originalSelect.attr('data-notice')) {\n                // Display a notice rather than actual suggestions.\n                suggestionsElement.html(originalSelect.attr('data-notice'));\n            } else if (matchingElements) {\n                // We only activate the first item in the list if tags is false,\n                // because otherwise \"Enter\" would select the first item, instead of\n                // creating a new tag.\n                if (!options.tags) {\n                    activateItem(0, state);\n                }\n            } else {\n                // Nothing matches. Tell them that.\n                str.get_string('nosuggestions', 'form').done(function(nosuggestionsstr) {\n                    suggestionsElement.html(nosuggestionsstr);\n                });\n            }\n\n            return suggestionsElement;\n        })\n        .then(function() {\n            return M.util.js_complete(pendingKey);\n        })\n        .catch(notification.exception);\n\n        return returnVal;\n    };\n\n    /**\n     * Create a new item for the list (a tag).\n     *\n     * @method createItem\n     * @private\n     * @param {Object} options The original options for the autocomplete.\n     * @param {Object} state State variables for the autocomplete.\n     * @param {JQuery} originalSelect The JQuery object matching the hidden select list.\n     * @return {Promise}\n     */\n    var createItem = function(options, state, originalSelect) {\n        // Find the element in the DOM.\n        var inputElement = $(document.getElementById(state.inputId));\n        // Get the current text in the input field.\n        var query = inputElement.val();\n        var tags = query.split(',');\n        var found = false;\n\n        $.each(tags, function(tagindex, tag) {\n            // If we can only select one at a time, deselect any current value.\n            tag = tag.trim();\n            if (tag !== '') {\n                if (!options.multiple) {\n                    originalSelect.children('option').prop('selected', false);\n                }\n                // Look for an existing option in the select list that matches this new tag.\n                originalSelect.children('option').each(function(index, ele) {\n                    if ($(ele).attr('value') == tag) {\n                        found = true;\n                        $(ele).prop('selected', true);\n                    }\n                });\n                // Only create the item if it's new.\n                if (!found) {\n                    var option = $('<option>');\n                    option.append(document.createTextNode(tag));\n                    option.attr('value', tag);\n                    originalSelect.append(option);\n                    option.prop('selected', true);\n                    // We mark newly created custom options as we handle them differently if they are \"deselected\".\n                    option.attr('data-iscustom', true);\n                }\n            }\n        });\n\n        return updateSelectionList(options, state, originalSelect)\n        .then(function() {\n            // Notify that the selection changed.\n            notifyChange(originalSelect);\n\n            return;\n        })\n        .then(function() {\n            // Clear the input field.\n            inputElement.val('');\n\n            return;\n        })\n        .then(function() {\n            // Close the suggestions list.\n            return closeSuggestions(state);\n        });\n    };\n\n    /**\n     * Select the currently active item from the suggestions list.\n     *\n     * @method selectCurrentItem\n     * @private\n     * @param {Object} options The original options for the autocomplete.\n     * @param {Object} state State variables for the autocomplete.\n     * @param {JQuery} originalSelect The JQuery object matching the hidden select list.\n     * @return {Promise}\n     */\n    var selectCurrentItem = function(options, state, originalSelect) {\n        // Find the elements in the page.\n        var inputElement = $(document.getElementById(state.inputId));\n        var suggestionsElement = $(document.getElementById(state.suggestionsId));\n        // Here loop through suggestions and set val to join of all selected items.\n\n        var selectedItemValue = suggestionsElement.children('[aria-selected=true]').attr('data-value');\n        // The select will either be a single or multi select, so the following will either\n        // select one or more items correctly.\n        // Take care to use 'prop' and not 'attr' for selected properties.\n        // If only one can be selected at a time, start by deselecting everything.\n        if (!options.multiple) {\n            originalSelect.children('option').prop('selected', false);\n        }\n        // Look for a match, and toggle the selected property if there is a match.\n        originalSelect.children('option').each(function(index, ele) {\n            if ($(ele).attr('value') == selectedItemValue) {\n                $(ele).prop('selected', true);\n            }\n        });\n\n        return updateSelectionList(options, state, originalSelect)\n        .then(function() {\n            // Notify that the selection changed.\n            notifyChange(originalSelect);\n\n            return;\n        })\n        .then(function() {\n            if (options.closeSuggestionsOnSelect) {\n                // Clear the input element.\n                inputElement.val('');\n                // Close the list of suggestions.\n                return closeSuggestions(state);\n            } else {\n                // Focus on the input element so the suggestions does not auto-close.\n                inputElement.focus();\n                // Remove the last selected item from the suggestions list.\n                return updateSuggestions(options, state, inputElement.val(), originalSelect);\n            }\n        });\n    };\n\n    /**\n     * Fetch a new list of options via ajax.\n     *\n     * @method updateAjax\n     * @private\n     * @param {Event} e The event that triggered this update.\n     * @param {Object} options The original options for the autocomplete.\n     * @param {Object} state The state variables for the autocomplete.\n     * @param {JQuery} originalSelect The JQuery object matching the hidden select list.\n     * @param {Object} ajaxHandler This is a module that does the ajax fetch and translates the results.\n     * @return {Promise}\n     */\n    var updateAjax = function(e, options, state, originalSelect, ajaxHandler) {\n        var pendingPromise = addPendingJSPromise('updateAjax');\n        // We need to show the indicator outside of the hidden select list.\n        // So we get the parent id of the hidden select list.\n        var parentElement = $(document.getElementById(state.selectId)).parent();\n        LoadingIcon.addIconToContainerRemoveOnCompletion(parentElement, pendingPromise);\n\n        // Get the query to pass to the ajax function.\n        var query = $(e.currentTarget).val();\n        // Call the transport function to do the ajax (name taken from Select2).\n        ajaxHandler.transport(options.selector, query, function(results) {\n            // We got a result - pass it through the translator before using it.\n            var processedResults = ajaxHandler.processResults(options.selector, results);\n            var existingValues = [];\n\n            // Now destroy all options that are not current\n            originalSelect.children('option').each(function(optionIndex, option) {\n                option = $(option);\n                if (!option.prop('selected')) {\n                    option.remove();\n                } else {\n                    existingValues.push(String(option.attr('value')));\n                }\n            });\n\n            if (!options.multiple && originalSelect.children('option').length === 0) {\n                // If this is a single select - and there are no current options\n                // the first option added will be selected by the browser. This causes a bug!\n                // We need to insert an empty option so that none of the real options are selected.\n                var option = $('<option>');\n                originalSelect.append(option);\n            }\n            if ($.isArray(processedResults)) {\n                // Add all the new ones returned from ajax.\n                $.each(processedResults, function(resultIndex, result) {\n                    if (existingValues.indexOf(String(result.value)) === -1) {\n                        var option = $('<option>');\n                        option.append(result.label);\n                        option.attr('value', result.value);\n                        originalSelect.append(option);\n                    }\n                });\n                originalSelect.attr('data-notice', '');\n            } else {\n                // The AJAX handler returned a string instead of the array.\n                originalSelect.attr('data-notice', processedResults);\n            }\n            // Update the list of suggestions now from the new values in the select list.\n            pendingPromise.resolve(updateSuggestions(options, state, '', originalSelect));\n        }, function(error) {\n            pendingPromise.reject(error);\n        });\n\n        return pendingPromise;\n    };\n\n    /**\n     * Add all the event listeners required for keyboard nav, blur clicks etc.\n     *\n     * @method addNavigation\n     * @private\n     * @param {Object} options The options used to create this autocomplete element.\n     * @param {Object} state State variables for this autocomplete element.\n     * @param {JQuery} originalSelect The JQuery object matching the hidden select list.\n     */\n    var addNavigation = function(options, state, originalSelect) {\n        // Start with the input element.\n        var inputElement = $(document.getElementById(state.inputId));\n        // Add keyboard nav with keydown.\n        inputElement.on('keydown', function(e) {\n            var pendingJsPromise = addPendingJSPromise('addNavigation-' + state.inputId + '-' + e.keyCode);\n\n            switch (e.keyCode) {\n                case KEYS.DOWN:\n                    // If the suggestion list is open, move to the next item.\n                    if (!options.showSuggestions) {\n                        // Do not consume this event.\n                        pendingJsPromise.resolve();\n                        return true;\n                    } else if (inputElement.attr('aria-expanded') === \"true\") {\n                        pendingJsPromise.resolve(activateNextItem(state));\n                    } else {\n                        // Handle ajax population of suggestions.\n                        if (!inputElement.val() && options.ajax) {\n                            require([options.ajax], function(ajaxHandler) {\n                                pendingJsPromise.resolve(updateAjax(e, options, state, originalSelect, ajaxHandler));\n                            });\n                        } else {\n                            // Open the suggestions list.\n                            pendingJsPromise.resolve(updateSuggestions(options, state, inputElement.val(), originalSelect));\n                        }\n                    }\n                    // We handled this event, so prevent it.\n                    e.preventDefault();\n                    return false;\n                case KEYS.UP:\n                    // Choose the previous active item.\n                    pendingJsPromise.resolve(activatePreviousItem(state));\n\n                    // We handled this event, so prevent it.\n                    e.preventDefault();\n                    return false;\n                case KEYS.ENTER:\n                    var suggestionsElement = $(document.getElementById(state.suggestionsId));\n                    if ((inputElement.attr('aria-expanded') === \"true\") &&\n                            (suggestionsElement.children('[aria-selected=true]').length > 0)) {\n                        // If the suggestion list has an active item, select it.\n                        pendingJsPromise.resolve(selectCurrentItem(options, state, originalSelect));\n                    } else if (options.tags) {\n                        // If tags are enabled, create a tag.\n                        pendingJsPromise.resolve(createItem(options, state, originalSelect));\n                    } else {\n                        pendingJsPromise.resolve();\n                    }\n\n                    // We handled this event, so prevent it.\n                    e.preventDefault();\n                    return false;\n                case KEYS.ESCAPE:\n                    if (inputElement.attr('aria-expanded') === \"true\") {\n                        // If the suggestion list is open, close it.\n                        pendingJsPromise.resolve(closeSuggestions(state));\n                    } else {\n                        pendingJsPromise.resolve();\n                    }\n                    // We handled this event, so prevent it.\n                    e.preventDefault();\n                    return false;\n            }\n            pendingJsPromise.resolve();\n            return true;\n        });\n        // Support multi lingual COMMA keycode (44).\n        inputElement.on('keypress', function(e) {\n\n            if (e.keyCode === KEYS.COMMA) {\n                if (options.tags) {\n                    // If we are allowing tags, comma should create a tag (or enter).\n                    addPendingJSPromise('keypress-' + e.keyCode)\n                    .resolve(createItem(options, state, originalSelect));\n                }\n                // We handled this event, so prevent it.\n                e.preventDefault();\n                return false;\n            }\n            return true;\n        });\n        // Support submitting the form without leaving the autocomplete element,\n        // or submitting too quick before the blur handler action is completed.\n        inputElement.closest('form').on('submit', function() {\n            if (options.tags) {\n                // If tags are enabled, create a tag.\n                addPendingJSPromise('form-autocomplete-submit')\n                .resolve(createItem(options, state, originalSelect));\n            }\n\n            return true;\n        });\n        inputElement.on('blur', function() {\n            var pendingPromise = addPendingJSPromise('form-autocomplete-blur');\n            window.setTimeout(function() {\n                // Get the current element with focus.\n                var focusElement = $(document.activeElement);\n                var timeoutPromise = $.Deferred();\n\n                // Only close the menu if the input hasn't regained focus and if the element still exists,\n                // and regain focus if the scrollbar is clicked.\n                // Due to the half a second delay, it is possible that the input element no longer exist\n                // by the time this code is being executed.\n                if (focusElement.is(document.getElementById(state.suggestionsId))) {\n                    inputElement.focus(); // Probably the scrollbar is clicked. Regain focus.\n                } else if (!focusElement.is(inputElement) && $(document.getElementById(state.inputId)).length) {\n                    if (options.tags) {\n                        timeoutPromise.then(function() {\n                            return createItem(options, state, originalSelect);\n                        })\n                        .catch();\n                    }\n                    timeoutPromise.then(function() {\n                        return closeSuggestions(state);\n                    })\n                    .catch();\n                }\n\n                timeoutPromise.then(function() {\n                    return pendingPromise.resolve();\n                })\n                .catch();\n                timeoutPromise.resolve();\n            }, 500);\n        });\n        if (options.showSuggestions) {\n            var arrowElement = $(document.getElementById(state.downArrowId));\n            arrowElement.on('click', function(e) {\n                var pendingPromise = addPendingJSPromise('form-autocomplete-show-suggestions');\n\n                // Prevent the close timer, or we will open, then close the suggestions.\n                inputElement.focus();\n\n                // Handle ajax population of suggestions.\n                if (!inputElement.val() && options.ajax) {\n                    require([options.ajax], function(ajaxHandler) {\n                        pendingPromise.resolve(updateAjax(e, options, state, originalSelect, ajaxHandler));\n                    });\n                } else {\n                    // Else - open the suggestions list.\n                    pendingPromise.resolve(updateSuggestions(options, state, inputElement.val(), originalSelect));\n                }\n            });\n        }\n\n        var suggestionsElement = $(document.getElementById(state.suggestionsId));\n        // Remove any click handler first.\n        suggestionsElement.parent().prop(\"onclick\", null).off(\"click\");\n        suggestionsElement.parent().on('click', `#${state.suggestionsId} [role=option]`, function(e) {\n            var pendingPromise = addPendingJSPromise('form-autocomplete-parent');\n            // Handle clicks on suggestions.\n            var element = $(e.currentTarget).closest('[role=option]');\n            var suggestionsElement = $(document.getElementById(state.suggestionsId));\n            // Find the index of the clicked on suggestion.\n            var current = suggestionsElement.children(':not([aria-hidden])').index(element);\n\n            // Activate it.\n            activateItem(current, state)\n            .then(function() {\n                // And select it.\n                return selectCurrentItem(options, state, originalSelect);\n            })\n            .then(function() {\n                return pendingPromise.resolve();\n            })\n            .catch();\n        });\n        var selectionElement = $(document.getElementById(state.selectionId));\n\n        // Handle clicks on the selected items (will unselect an item).\n        selectionElement.on('click', '[role=option]', function(e) {\n            var pendingPromise = addPendingJSPromise('form-autocomplete-clicks');\n\n            // Remove it from the selection.\n            pendingPromise.resolve(deselectItem(options, state, $(e.currentTarget), originalSelect));\n        });\n\n        // When listbox is focused, focus on the first option if there is no focused option.\n        selectionElement.on('focus', function() {\n            updateActiveSelectionFromState(state);\n        });\n\n        // Keyboard navigation for the selection list.\n        selectionElement.on('keydown', function(e) {\n            var pendingPromise = addPendingJSPromise('form-autocomplete-keydown-' + e.keyCode);\n            switch (e.keyCode) {\n                case KEYS.RIGHT:\n                case KEYS.DOWN:\n                    // We handled this event, so prevent it.\n                    e.preventDefault();\n\n                    // Choose the next selection item.\n                    pendingPromise.resolve(activateNextSelection(state));\n                    return;\n                case KEYS.LEFT:\n                case KEYS.UP:\n                    // We handled this event, so prevent it.\n                    e.preventDefault();\n\n                    // Choose the previous selection item.\n                    pendingPromise.resolve(activatePreviousSelection(state));\n                    return;\n                case KEYS.SPACE:\n                case KEYS.ENTER:\n                    // Get the item that is currently selected.\n                    var selectedItem = $(document.getElementById(state.selectionId)).children('[data-active-selection]');\n                    if (selectedItem) {\n                        e.preventDefault();\n\n                        // Unselect this item.\n                        pendingPromise.resolve(deselectItem(options, state, selectedItem, originalSelect));\n                    }\n                    return;\n            }\n\n            // Not handled. Resolve the promise.\n            pendingPromise.resolve();\n        });\n        // Whenever the input field changes, update the suggestion list.\n        if (options.showSuggestions) {\n            // Store the value of the field as its last value, when the field gains focus.\n            inputElement.on('focus', function(e) {\n                var query = $(e.currentTarget).val();\n                $(e.currentTarget).data('last-value', query);\n            });\n\n            // If this field uses ajax, set it up.\n            if (options.ajax) {\n                require([options.ajax], function(ajaxHandler) {\n                    // Creating throttled handlers free of race conditions, and accurate.\n                    // This code keeps track of a throttleTimeout, which is periodically polled.\n                    // Once the throttled function is executed, the fact that it is running is noted.\n                    // If a subsequent request comes in whilst it is running, this request is re-applied.\n                    var throttleTimeout = null;\n                    var inProgress = false;\n                    var pendingKey = 'autocomplete-throttledhandler';\n                    var handler = function(e) {\n                        // Empty the current timeout.\n                        throttleTimeout = null;\n\n                        // Mark this request as in-progress.\n                        inProgress = true;\n\n                        // Process the request.\n                        updateAjax(e, options, state, originalSelect, ajaxHandler)\n                        .then(function() {\n                            // Check if the throttleTimeout is still empty.\n                            // There's a potential condition whereby the JS request takes long enough to complete that\n                            // another task has been queued.\n                            // In this case another task will be kicked off and we must wait for that before marking htis as\n                            // complete.\n                            if (null === throttleTimeout) {\n                                // Mark this task as complete.\n                                M.util.js_complete(pendingKey);\n                            }\n                            inProgress = false;\n\n                            return arguments[0];\n                        })\n                        .catch(notification.exception);\n                    };\n\n                    // For input events, we do not want to trigger many, many updates.\n                    var throttledHandler = function(e) {\n                        window.clearTimeout(throttleTimeout);\n                        if (inProgress) {\n                            // A request is currently ongoing.\n                            // Delay this request another 100ms.\n                            throttleTimeout = window.setTimeout(throttledHandler.bind(this, e), 100);\n                            return;\n                        }\n\n                        if (throttleTimeout === null) {\n                            // There is currently no existing timeout handler, and it has not been recently cleared, so\n                            // this is the start of a throttling check.\n                            M.util.js_pending(pendingKey);\n                        }\n\n                        // There is currently no existing timeout handler, and it has not been recently cleared, so this\n                        // is the start of a throttling check.\n                        // Queue a call to the handler.\n                        throttleTimeout = window.setTimeout(handler.bind(this, e), 300);\n                    };\n\n                    // Trigger an ajax update after the text field value changes.\n                    inputElement.on('input', function(e) {\n                        var query = $(e.currentTarget).val();\n                        var last = $(e.currentTarget).data('last-value');\n                        // IE11 fires many more input events than required - even when the value has not changed.\n                        if (last !== query) {\n                            throttledHandler(e);\n                        }\n                        $(e.currentTarget).data('last-value', query);\n                    });\n                });\n            } else {\n                inputElement.on('input', function(e) {\n                    var query = $(e.currentTarget).val();\n                    var last = $(e.currentTarget).data('last-value');\n                    // IE11 fires many more input events than required - even when the value has not changed.\n                    // We need to only do this for real value changed events or the suggestions will be\n                    // unclickable on IE11 (because they will be rebuilt before the click event fires).\n                    // Note - because of this we cannot close the list when the query is empty or it will break\n                    // on IE11.\n                    if (last !== query) {\n                        updateSuggestions(options, state, query, originalSelect);\n                    }\n                    $(e.currentTarget).data('last-value', query);\n                });\n            }\n        }\n\n        // Add a Bootstrap keydown handler to close the suggestions list preventing the whole Dropdown close.\n        EventHandler.on(document, 'keydown.bs.dropdown.data-api', '.dropdown-menu', (event) => {\n            const pendingPromise = addPendingJSPromise('addNavigation-' + state.inputId + '-' + event.key);\n            if (event.key === \"Escape\" && inputElement.attr('aria-expanded') === \"true\") {\n                event.stopImmediatePropagation();\n                return pendingPromise.resolve(closeSuggestions(state));\n            }\n            return pendingPromise.resolve();\n        });\n    };\n\n    /**\n     * Create and return an unresolved Promise for some pending JS.\n     *\n     * @param   {String} key The unique identifier for this promise\n     * @return  {Promise}\n     */\n    var addPendingJSPromise = function(key) {\n            var pendingKey = 'form-autocomplete:' + key;\n\n            M.util.js_pending(pendingKey);\n\n            var pendingPromise = $.Deferred();\n\n            pendingPromise\n            .then(function() {\n                M.util.js_complete(pendingKey);\n\n                return arguments[0];\n            })\n            .catch(notification.exception);\n\n            return pendingPromise;\n    };\n\n    /**\n     * Turn a boring select box into an auto-complete beast.\n     *\n     * @method enhanceField\n     * @param {string} selector The selector that identifies the select box.\n     * @param {boolean} tags Whether to allow support for tags (can define new entries).\n     * @param {string} ajax Name of an AMD module to handle ajax requests. If specified, the AMD\n     *                      module must expose 2 functions \"transport\" and \"processResults\".\n     *                      These are modeled on Select2 see: https://select2.github.io/options.html#ajax\n     * @param {String|Promise<string>} placeholder - The text to display before a selection is made.\n     * @param {Boolean} caseSensitive - If search has to be made case sensitive.\n     * @param {Boolean} showSuggestions - If suggestions should be shown\n     * @param {String|Promise<string>} noSelectionString - Text to display when there is no selection\n     * @param {Boolean} closeSuggestionsOnSelect - Whether to close the suggestions immediately after making a selection.\n     * @param {Object} templateOverrides A set of templates to use instead of the standard templates\n     * @return {Promise}\n     */\n     var enhanceField = async function(selector, tags, ajax, placeholder, caseSensitive, showSuggestions, noSelectionString,\n                          closeSuggestionsOnSelect, templateOverrides) {\n            // Set some default values.\n            var options = {\n                selector: selector,\n                tags: false,\n                ajax: false,\n                placeholder: await placeholder,\n                caseSensitive: false,\n                showSuggestions: true,\n                noSelectionString: await noSelectionString,\n                templates: $.extend({\n                        input: 'core/form_autocomplete_input',\n                        items: 'core/form_autocomplete_selection_items',\n                        layout: 'core/form_autocomplete_layout',\n                        selection: 'core/form_autocomplete_selection',\n                        suggestions: 'core/form_autocomplete_suggestions',\n                    }, templateOverrides),\n            };\n            var pendingKey = 'autocomplete-setup-' + selector;\n            M.util.js_pending(pendingKey);\n            if (typeof tags !== \"undefined\") {\n                options.tags = tags;\n            }\n            if (typeof ajax !== \"undefined\") {\n                options.ajax = ajax;\n            }\n            if (typeof caseSensitive !== \"undefined\") {\n                options.caseSensitive = caseSensitive;\n            }\n            if (typeof showSuggestions !== \"undefined\") {\n                options.showSuggestions = showSuggestions;\n            }\n            if (typeof noSelectionString === \"undefined\") {\n                str.get_string('noselection', 'form').done(function(result) {\n                    options.noSelectionString = result;\n                }).fail(notification.exception);\n            }\n\n            // Look for the select element.\n            var originalSelect = $(selector);\n            if (!originalSelect) {\n                log.debug('Selector not found: ' + selector);\n                M.util.js_complete(pendingKey);\n                return false;\n            }\n\n            // Ensure we enhance the element only once.\n            if (originalSelect.data('enhanced') === 'enhanced') {\n                M.util.js_complete(pendingKey);\n                return false;\n            }\n            originalSelect.data('enhanced', 'enhanced');\n\n            // Hide the original select.\n            Aria.hide(originalSelect.get());\n            originalSelect.css('visibility', 'hidden');\n\n            // Find or generate some ids.\n            var state = {\n                selectId: originalSelect.attr('id'),\n                inputId: 'form_autocomplete_input-' + uniqueId,\n                suggestionsId: 'form_autocomplete_suggestions-' + uniqueId,\n                selectionId: 'form_autocomplete_selection-' + uniqueId,\n                downArrowId: 'form_autocomplete_downarrow-' + uniqueId,\n                items: [],\n                required: originalSelect[0]?.ariaRequired === 'true',\n            };\n\n            // Increment the unique counter so we don't get duplicates ever.\n            uniqueId++;\n\n            options.multiple = originalSelect.attr('multiple');\n            if (!options.multiple) {\n                // If this is a single select then there is no way to de-select the current value -\n                // unless we add a bogus blank option to be selected when nothing else is.\n                // This matches similar code in updateAjax above.\n                originalSelect.prepend('<option>');\n            }\n\n            if (typeof closeSuggestionsOnSelect !== \"undefined\") {\n                options.closeSuggestionsOnSelect = closeSuggestionsOnSelect;\n            } else {\n                // If not specified, this will close suggestions by default for single-select elements only.\n                options.closeSuggestionsOnSelect = !options.multiple;\n            }\n\n            var originalLabel = $('[for=' + state.selectId + ']');\n            // Create the new markup and insert it after the select.\n            var suggestions = rebuildOptions(originalSelect.children('option'), true);\n\n            // Render all the parts of our UI.\n            var context = $.extend({}, options, state);\n            context.options = suggestions;\n            context.items = [];\n\n            // Collect rendered inline JS to be executed once the HTML is shown.\n            var collectedjs = '';\n\n            var renderLayout = templates.render(options.templates.layout, {})\n            .then(function(html) {\n                return $(html);\n            });\n\n            var renderInput = templates.render(options.templates.input, context).then(function(html, js) {\n                collectedjs += js;\n                return $(html);\n            });\n\n            var renderDatalist = templates.render(options.templates.suggestions, context).then(function(html, js) {\n                collectedjs += js;\n                return $(html);\n            });\n\n            var renderSelection = templates.render(options.templates.selection, context).then(function(html, js) {\n                collectedjs += js;\n                return $(html);\n            });\n\n            return Promise.all([renderLayout, renderInput, renderDatalist, renderSelection])\n            .then(function([layout, input, suggestions, selection]) {\n                originalSelect.hide();\n                var container = originalSelect.parent();\n\n                // Ensure that the data-fieldtype is set for behat.\n                input.find('input').attr('data-fieldtype', 'autocomplete');\n\n                container.append(layout);\n                container.find('[data-region=\"form_autocomplete-input\"]').replaceWith(input);\n                container.find('[data-region=\"form_autocomplete-suggestions\"]').replaceWith(suggestions);\n                container.find('[data-region=\"form_autocomplete-selection\"]').replaceWith(selection);\n\n                templates.runTemplateJS(collectedjs);\n\n                // Update the form label to point to the text input.\n                originalLabel.attr('for', state.inputId);\n                // Add the event handlers.\n                addNavigation(options, state, originalSelect);\n\n                var suggestionsElement = $(document.getElementById(state.suggestionsId));\n                // Hide the suggestions by default.\n                suggestionsElement.hide();\n                Aria.hide(suggestionsElement.get());\n\n                return;\n            })\n            .then(function() {\n                // Show the current values in the selection list.\n                return updateSelectionList(options, state, originalSelect);\n            })\n            .then(function() {\n                return M.util.js_complete(pendingKey);\n            })\n            .catch(function(error) {\n                M.util.js_complete(pendingKey);\n                notification.exception(error);\n            });\n    };\n\n    return {\n        // Public variables and functions.\n        enhanceField: enhanceField,\n\n        /**\n         * We need to use jQuery here as some calling code uses .done() and .fail() rather than native .then() and .catch()\n         *\n         * @method enhance\n         * @return {Promise} A jQuery promise\n         */\n        enhance: function() {\n            return $.when(enhanceField(...arguments));\n        }\n    };\n});\n"],"names":["define","$","log","str","templates","notification","LoadingIcon","Aria","FormChangeChecker","Popper","EventHandler","KEYS","uniqueId","Date","now","activateSelection","index","state","selectionElement","document","getElementById","selectionId","wrapListIndex","children","length","element","get","itemId","attr","Deferred","resolve","updateActiveSelectionFromState","activeElement","selectionRegion","activeId","activeValue","_selectionRegion$attr","replace","find","getActiveElementFromState","activeIndex","updateSelectionList","options","originalSelect","pendingKey","inputId","M","util","js_pending","items","rebuildOptions","newSelection","hasItemListChanged","js_complete","Promise","context","extend","render","then","html","js","replaceNodeContents","catch","exception","filter","item","indexOf","notifyChange","markFormChangedFromNode","dispatchEvent","Event","bubbles","deselectItem","selectedItemValue","undefined","first","prepend","each","ele","prop","remove","activateItem","inputElement","suggestionsElement","suggestionsId","globalIndex","scrollPos","offset","top","scrollTop","height","animate","promise","getCurrentItem","getNextEnabledItem","current","suggestions","nextIndex","getAttribute","getPreviousEnabledItem","previousIndex","originalOptions","includeEmpty","label","data","push","value","disabled","classes","classList","closeSuggestions","hide","updateSuggestions","query","matchingElements","searchquery","caseSensitive","toLocaleLowerCase","replaceNode","unhide","createPopper","placement","modifiers","name","enabled","node","text","show","tags","get_string","done","nosuggestionsstr","createItem","val","split","found","tagindex","tag","trim","multiple","option","append","createTextNode","selectCurrentItem","closeSuggestionsOnSelect","focus","updateAjax","e","ajaxHandler","pendingPromise","addPendingJSPromise","parentElement","selectId","parent","addIconToContainerRemoveOnCompletion","currentTarget","transport","selector","results","processedResults","processResults","existingValues","optionIndex","String","isArray","resultIndex","result","error","reject","addNavigation","on","pendingJsPromise","keyCode","showSuggestions","activateNextItem","ajax","require","preventDefault","activatePreviousItem","closest","window","setTimeout","focusElement","timeoutPromise","is","downArrowId","off","selectionsElement","activateNextSelection","activatePreviousSelection","selectedItem","throttleTimeout","inProgress","handler","arguments","throttledHandler","clearTimeout","bind","this","event","key","stopImmediatePropagation","enhanceField","async","placeholder","noSelectionString","templateOverrides","input","layout","selection","fail","debug","css","required","ariaRequired","originalLabel","collectedjs","renderLayout","renderInput","renderDatalist","renderSelection","all","container","replaceWith","runTemplateJS","enhance","when"],"mappings":"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"}
=======
{"version":3,"sources":["../src/form-autocomplete.js"],"names":["define","$","log","str","templates","notification","LoadingIcon","KEYS","DOWN","ENTER","SPACE","ESCAPE","COMMA","UP","LEFT","RIGHT","uniqueId","Date","now","activateSelection","index","state","selectionElement","document","getElementById","selectionId","length","children","element","get","itemId","attr","Deferred","resolve","updateSelectionList","options","originalSelect","pendingKey","inputId","M","util","js_pending","items","newSelection","activeId","activeValue","each","ele","prop","label","data","html","push","value","context","extend","render","then","js","replaceNodeContents","js_complete","catch","exception","notifyChange","core_formchangechecker","set_form_changed","event","Event","createEvent","initEvent","dispatchEvent","deselectItem","item","selectedItemValue","remove","activateItem","inputElement","suggestionsElement","suggestionsId","globalIndex","scrollPos","offset","top","scrollTop","height","animate","promise","activateNextItem","current","activatePreviousSelection","selectionsElement","activateNextSelection","activatePreviousItem","closeSuggestions","hide","updateSuggestions","query","matchingElements","suggestions","option","innerHTML","searchquery","caseSensitive","toLocaleLowerCase","returnVal","replaceNode","show","node","text","indexOf","tags","get_string","done","nosuggestionsstr","createItem","val","split","found","tagindex","tag","trim","multiple","append","createTextNode","selectCurrentItem","closeSuggestionsOnSelect","focus","updateAjax","e","ajaxHandler","pendingPromise","addPendingJSPromise","parentElement","selectId","parent","addIconToContainerRemoveOnCompletion","currentTarget","transport","selector","results","processedResults","processResults","existingValues","optionIndex","isArray","resultIndex","result","error","reject","addNavigation","on","pendingJsPromise","keyCode","showSuggestions","ajax","require","preventDefault","closest","window","setTimeout","focusElement","activeElement","timeoutPromise","is","arrowElement","downArrowId","off","selectedItem","throttleTimeout","inProgress","handler","arguments","throttledHandler","clearTimeout","bind","last","key","enhance","placeholder","noSelectionString","fail","debug","css","prepend","originalLabel","collectedjs","renderInput","renderDatalist","renderSelection","when","input","selection","find","after","runTemplateJS"],"mappings":"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","sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Autocomplete wrapper for select2 library.\n *\n * @module     core/form-autocomplete\n * @class      autocomplete\n * @package    core\n * @copyright  2015 Damyon Wiese <damyon@moodle.com>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n * @since      3.0\n */\n/* globals require: false */\ndefine(\n    ['jquery', 'core/log', 'core/str', 'core/templates', 'core/notification', 'core/loadingicon'],\nfunction($, log, str, templates, notification, LoadingIcon) {\n\n    // Private functions and variables.\n    /** @var {Object} KEYS - List of keycode constants. */\n    var KEYS = {\n        DOWN: 40,\n        ENTER: 13,\n        SPACE: 32,\n        ESCAPE: 27,\n        COMMA: 44,\n        UP: 38,\n        LEFT: 37,\n        RIGHT: 39\n    };\n\n    var uniqueId = Date.now();\n\n    /**\n     * Make an item in the selection list \"active\".\n     *\n     * @method activateSelection\n     * @private\n     * @param {Number} index The index in the current (visible) list of selection.\n     * @param {Object} state State variables for this autocomplete element.\n     * @return {Promise}\n     */\n    var activateSelection = function(index, state) {\n        // Find the elements in the DOM.\n        var selectionElement = $(document.getElementById(state.selectionId));\n\n        // Count the visible items.\n        var length = selectionElement.children('[aria-selected=true]').length;\n        // Limit the index to the upper/lower bounds of the list (wrap in both directions).\n        index = index % length;\n        while (index < 0) {\n            index += length;\n        }\n        // Find the specified element.\n        var element = $(selectionElement.children('[aria-selected=true]').get(index));\n        // Create an id we can assign to this element.\n        var itemId = state.selectionId + '-' + index;\n\n        // Deselect all the selections.\n        selectionElement.children().attr('data-active-selection', false).attr('id', '');\n        // Select only this suggestion and assign it the id.\n        element.attr('data-active-selection', true).attr('id', itemId);\n        // Tell the input field it has a new active descendant so the item is announced.\n        selectionElement.attr('aria-activedescendant', itemId);\n\n        return $.Deferred().resolve();\n    };\n\n    /**\n     * Update the element that shows the currently selected items.\n     *\n     * @method updateSelectionList\n     * @private\n     * @param {Object} options Original options for this autocomplete element.\n     * @param {Object} state State variables for this autocomplete element.\n     * @param {JQuery} originalSelect The JQuery object matching the hidden select list.\n     * @return {Promise}\n     */\n    var updateSelectionList = function(options, state, originalSelect) {\n        var pendingKey = 'form-autocomplete-updateSelectionList-' + state.inputId;\n        M.util.js_pending(pendingKey);\n\n        // Build up a valid context to re-render the template.\n        var items = [];\n        var newSelection = $(document.getElementById(state.selectionId));\n        var activeId = newSelection.attr('aria-activedescendant');\n        var activeValue = false;\n\n        if (activeId) {\n            activeValue = $(document.getElementById(activeId)).attr('data-value');\n        }\n        originalSelect.children('option').each(function(index, ele) {\n            if ($(ele).prop('selected')) {\n                var label;\n                if ($(ele).data('html')) {\n                    label = $(ele).data('html');\n                } else {\n                    label = $(ele).html();\n                }\n                if (label !== '') {\n                    items.push({label: label, value: $(ele).attr('value')});\n                }\n            }\n        });\n        var context = $.extend({items: items}, options, state);\n        // Render the template.\n        return templates.render('core/form_autocomplete_selection_items', context)\n        .then(function(html, js) {\n            // Add it to the page.\n            templates.replaceNodeContents(newSelection, html, js);\n\n            if (activeValue !== false) {\n                // Reselect any previously selected item.\n                newSelection.children('[aria-selected=true]').each(function(index, ele) {\n                    if ($(ele).attr('data-value') === activeValue) {\n                        activateSelection(index, state);\n                    }\n                });\n            }\n\n            return activeValue;\n        })\n        .then(function() {\n            return M.util.js_complete(pendingKey);\n        })\n        .catch(notification.exception);\n    };\n\n    /**\n     * Notify of a change in the selection.\n     *\n     * @param {jQuery} originalSelect The jQuery object matching the hidden select list.\n     */\n    var notifyChange = function(originalSelect) {\n        if (typeof M.core_formchangechecker !== 'undefined') {\n            M.core_formchangechecker.set_form_changed();\n        }\n\n        // Note, jQuery .change() was not working here.\n        var event;\n        if (typeof Event === 'function') {\n            event = new Event('change');\n        } else {\n            // Support IE.\n            event = document.createEvent('Event');\n            event.initEvent('change', true, true);\n        }\n        originalSelect[0].dispatchEvent(event);\n    };\n\n    /**\n     * Remove the given item from the list of selected things.\n     *\n     * @method deselectItem\n     * @private\n     * @param {Object} options Original options for this autocomplete element.\n     * @param {Object} state State variables for this autocomplete element.\n     * @param {Element} item The item to be deselected.\n     * @param {Element} originalSelect The original select list.\n     * @return {Promise}\n     */\n    var deselectItem = function(options, state, item, originalSelect) {\n        var selectedItemValue = $(item).attr('data-value');\n\n        // Look for a match, and toggle the selected property if there is a match.\n        originalSelect.children('option').each(function(index, ele) {\n            if ($(ele).attr('value') == selectedItemValue) {\n                $(ele).prop('selected', false);\n                // We remove newly created custom tags from the suggestions list when they are deselected.\n                if ($(ele).attr('data-iscustom')) {\n                    $(ele).remove();\n                }\n            }\n        });\n        // Rerender the selection list.\n        return updateSelectionList(options, state, originalSelect)\n        .then(function() {\n            // Notify that the selection changed.\n            notifyChange(originalSelect);\n\n            return;\n        });\n    };\n\n    /**\n     * Make an item in the suggestions \"active\" (about to be selected).\n     *\n     * @method activateItem\n     * @private\n     * @param {Number} index The index in the current (visible) list of suggestions.\n     * @param {Object} state State variables for this instance of autocomplete.\n     * @return {Promise}\n     */\n    var activateItem = function(index, state) {\n        // Find the elements in the DOM.\n        var inputElement = $(document.getElementById(state.inputId));\n        var suggestionsElement = $(document.getElementById(state.suggestionsId));\n\n        // Count the visible items.\n        var length = suggestionsElement.children('[aria-hidden=false]').length;\n        // Limit the index to the upper/lower bounds of the list (wrap in both directions).\n        index = index % length;\n        while (index < 0) {\n            index += length;\n        }\n        // Find the specified element.\n        var element = $(suggestionsElement.children('[aria-hidden=false]').get(index));\n        // Find the index of this item in the full list of suggestions (including hidden).\n        var globalIndex = $(suggestionsElement.children('[role=option]')).index(element);\n        // Create an id we can assign to this element.\n        var itemId = state.suggestionsId + '-' + globalIndex;\n\n        // Deselect all the suggestions.\n        suggestionsElement.children().attr('aria-selected', false).attr('id', '');\n        // Select only this suggestion and assign it the id.\n        element.attr('aria-selected', true).attr('id', itemId);\n        // Tell the input field it has a new active descendant so the item is announced.\n        inputElement.attr('aria-activedescendant', itemId);\n\n        // Scroll it into view.\n        var scrollPos = element.offset().top\n                       - suggestionsElement.offset().top\n                       + suggestionsElement.scrollTop()\n                       - (suggestionsElement.height() / 2);\n        return suggestionsElement.animate({\n            scrollTop: scrollPos\n        }, 100).promise();\n    };\n\n    /**\n     * Find the index of the current active suggestion, and activate the next one.\n     *\n     * @method activateNextItem\n     * @private\n     * @param {Object} state State variable for this auto complete element.\n     * @return {Promise}\n     */\n    var activateNextItem = function(state) {\n        // Find the list of suggestions.\n        var suggestionsElement = $(document.getElementById(state.suggestionsId));\n        // Find the active one.\n        var element = suggestionsElement.children('[aria-selected=true]');\n        // Find it's index.\n        var current = suggestionsElement.children('[aria-hidden=false]').index(element);\n        // Activate the next one.\n        return activateItem(current + 1, state);\n    };\n\n    /**\n     * Find the index of the current active selection, and activate the previous one.\n     *\n     * @method activatePreviousSelection\n     * @private\n     * @param {Object} state State variables for this instance of autocomplete.\n     * @return {Promise}\n     */\n    var activatePreviousSelection = function(state) {\n        // Find the list of selections.\n        var selectionsElement = $(document.getElementById(state.selectionId));\n        // Find the active one.\n        var element = selectionsElement.children('[data-active-selection=true]');\n        if (!element) {\n            return activateSelection(0, state);\n        }\n        // Find it's index.\n        var current = selectionsElement.children('[aria-selected=true]').index(element);\n        // Activate the next one.\n        return activateSelection(current - 1, state);\n    };\n\n    /**\n     * Find the index of the current active selection, and activate the next one.\n     *\n     * @method activateNextSelection\n     * @private\n     * @param {Object} state State variables for this instance of autocomplete.\n     * @return {Promise}\n     */\n    var activateNextSelection = function(state) {\n        // Find the list of selections.\n        var selectionsElement = $(document.getElementById(state.selectionId));\n\n        // Find the active one.\n        var element = selectionsElement.children('[data-active-selection=true]');\n        var current = 0;\n\n        if (element) {\n            // The element was found. Determine the index and move to the next one.\n            current = selectionsElement.children('[aria-selected=true]').index(element);\n            current = current + 1;\n        } else {\n            // No selected item found. Move to the first.\n            current = 0;\n        }\n\n        return activateSelection(current, state);\n    };\n\n    /**\n     * Find the index of the current active suggestion, and activate the previous one.\n     *\n     * @method activatePreviousItem\n     * @private\n     * @param {Object} state State variables for this autocomplete element.\n     * @return {Promise}\n     */\n    var activatePreviousItem = function(state) {\n        // Find the list of suggestions.\n        var suggestionsElement = $(document.getElementById(state.suggestionsId));\n\n        // Find the active one.\n        var element = suggestionsElement.children('[aria-selected=true]');\n\n        // Find it's index.\n        var current = suggestionsElement.children('[aria-hidden=false]').index(element);\n\n        // Activate the previous one.\n        return activateItem(current - 1, state);\n    };\n\n    /**\n     * Close the list of suggestions.\n     *\n     * @method closeSuggestions\n     * @private\n     * @param {Object} state State variables for this autocomplete element.\n     * @return {Promise}\n     */\n    var closeSuggestions = function(state) {\n        // Find the elements in the DOM.\n        var inputElement = $(document.getElementById(state.inputId));\n        var suggestionsElement = $(document.getElementById(state.suggestionsId));\n\n        // Announce the list of suggestions was closed, and read the current list of selections.\n        inputElement.attr('aria-expanded', false).attr('aria-activedescendant', state.selectionId);\n\n        // Hide the suggestions list (from screen readers too).\n        suggestionsElement.hide().attr('aria-hidden', true);\n\n        return $.Deferred().resolve();\n    };\n\n    /**\n     * Rebuild the list of suggestions based on the current values in the select list, and the query.\n     *\n     * @method updateSuggestions\n     * @private\n     * @param {Object} options The original options for this autocomplete.\n     * @param {Object} state The state variables for this autocomplete.\n     * @param {String} query The current text for the search string.\n     * @param {JQuery} originalSelect The JQuery object matching the hidden select list.\n     * @return {Promise}\n     */\n    var updateSuggestions = function(options, state, query, originalSelect) {\n        var pendingKey = 'form-autocomplete-updateSuggestions-' + state.inputId;\n        M.util.js_pending(pendingKey);\n\n        // Find the elements in the DOM.\n        var inputElement = $(document.getElementById(state.inputId));\n        var suggestionsElement = $(document.getElementById(state.suggestionsId));\n\n        // Used to track if we found any visible suggestions.\n        var matchingElements = false;\n        // Options is used by the context when rendering the suggestions from a template.\n        var suggestions = [];\n        originalSelect.children('option').each(function(index, option) {\n            if ($(option).prop('selected') !== true) {\n                suggestions[suggestions.length] = {label: option.innerHTML, value: $(option).attr('value')};\n            }\n        });\n\n        // Re-render the list of suggestions.\n        var searchquery = state.caseSensitive ? query : query.toLocaleLowerCase();\n        var context = $.extend({options: suggestions}, options, state);\n        var returnVal = templates.render(\n            'core/form_autocomplete_suggestions',\n            context\n        )\n        .then(function(html, js) {\n            // We have the new template, insert it in the page.\n            templates.replaceNode(suggestionsElement, html, js);\n\n            // Get the element again.\n            suggestionsElement = $(document.getElementById(state.suggestionsId));\n            // Show it if it is hidden.\n            suggestionsElement.show().attr('aria-hidden', false);\n            // For each option in the list, hide it if it doesn't match the query.\n            suggestionsElement.children().each(function(index, node) {\n                node = $(node);\n                if ((options.caseSensitive && node.text().indexOf(searchquery) > -1) ||\n                        (!options.caseSensitive && node.text().toLocaleLowerCase().indexOf(searchquery) > -1)) {\n                    node.show().attr('aria-hidden', false);\n                    matchingElements = true;\n                } else {\n                    node.hide().attr('aria-hidden', true);\n                }\n            });\n            // If we found any matches, show the list.\n            inputElement.attr('aria-expanded', true);\n            if (originalSelect.attr('data-notice')) {\n                // Display a notice rather than actual suggestions.\n                suggestionsElement.html(originalSelect.attr('data-notice'));\n            } else if (matchingElements) {\n                // We only activate the first item in the list if tags is false,\n                // because otherwise \"Enter\" would select the first item, instead of\n                // creating a new tag.\n                if (!options.tags) {\n                    activateItem(0, state);\n                }\n            } else {\n                // Nothing matches. Tell them that.\n                str.get_string('nosuggestions', 'form').done(function(nosuggestionsstr) {\n                    suggestionsElement.html(nosuggestionsstr);\n                });\n            }\n\n            return suggestionsElement;\n        })\n        .then(function() {\n            return M.util.js_complete(pendingKey);\n        })\n        .catch(notification.exception);\n\n        return returnVal;\n    };\n\n    /**\n     * Create a new item for the list (a tag).\n     *\n     * @method createItem\n     * @private\n     * @param {Object} options The original options for the autocomplete.\n     * @param {Object} state State variables for the autocomplete.\n     * @param {JQuery} originalSelect The JQuery object matching the hidden select list.\n     * @return {Promise}\n     */\n    var createItem = function(options, state, originalSelect) {\n        // Find the element in the DOM.\n        var inputElement = $(document.getElementById(state.inputId));\n        // Get the current text in the input field.\n        var query = inputElement.val();\n        var tags = query.split(',');\n        var found = false;\n\n        $.each(tags, function(tagindex, tag) {\n            // If we can only select one at a time, deselect any current value.\n            tag = tag.trim();\n            if (tag !== '') {\n                if (!options.multiple) {\n                    originalSelect.children('option').prop('selected', false);\n                }\n                // Look for an existing option in the select list that matches this new tag.\n                originalSelect.children('option').each(function(index, ele) {\n                    if ($(ele).attr('value') == tag) {\n                        found = true;\n                        $(ele).prop('selected', true);\n                    }\n                });\n                // Only create the item if it's new.\n                if (!found) {\n                    var option = $('<option>');\n                    option.append(document.createTextNode(tag));\n                    option.attr('value', tag);\n                    originalSelect.append(option);\n                    option.prop('selected', true);\n                    // We mark newly created custom options as we handle them differently if they are \"deselected\".\n                    option.attr('data-iscustom', true);\n                }\n            }\n        });\n\n        return updateSelectionList(options, state, originalSelect)\n        .then(function() {\n            // Notify that the selection changed.\n            notifyChange(originalSelect);\n\n            return;\n        })\n        .then(function() {\n            // Clear the input field.\n            inputElement.val('');\n\n            return;\n        })\n        .then(function() {\n            // Close the suggestions list.\n            return closeSuggestions(state);\n        });\n    };\n\n    /**\n     * Select the currently active item from the suggestions list.\n     *\n     * @method selectCurrentItem\n     * @private\n     * @param {Object} options The original options for the autocomplete.\n     * @param {Object} state State variables for the autocomplete.\n     * @param {JQuery} originalSelect The JQuery object matching the hidden select list.\n     * @return {Promise}\n     */\n    var selectCurrentItem = function(options, state, originalSelect) {\n        // Find the elements in the page.\n        var inputElement = $(document.getElementById(state.inputId));\n        var suggestionsElement = $(document.getElementById(state.suggestionsId));\n        // Here loop through suggestions and set val to join of all selected items.\n\n        var selectedItemValue = suggestionsElement.children('[aria-selected=true]').attr('data-value');\n        // The select will either be a single or multi select, so the following will either\n        // select one or more items correctly.\n        // Take care to use 'prop' and not 'attr' for selected properties.\n        // If only one can be selected at a time, start by deselecting everything.\n        if (!options.multiple) {\n            originalSelect.children('option').prop('selected', false);\n        }\n        // Look for a match, and toggle the selected property if there is a match.\n        originalSelect.children('option').each(function(index, ele) {\n            if ($(ele).attr('value') == selectedItemValue) {\n                $(ele).prop('selected', true);\n            }\n        });\n\n        return updateSelectionList(options, state, originalSelect)\n        .then(function() {\n            // Notify that the selection changed.\n            notifyChange(originalSelect);\n\n            return;\n        })\n        .then(function() {\n            if (options.closeSuggestionsOnSelect) {\n                // Clear the input element.\n                inputElement.val('');\n                // Close the list of suggestions.\n                return closeSuggestions(state);\n            } else {\n                // Focus on the input element so the suggestions does not auto-close.\n                inputElement.focus();\n                // Remove the last selected item from the suggestions list.\n                return updateSuggestions(options, state, inputElement.val(), originalSelect);\n            }\n        });\n    };\n\n    /**\n     * Fetch a new list of options via ajax.\n     *\n     * @method updateAjax\n     * @private\n     * @param {Event} e The event that triggered this update.\n     * @param {Object} options The original options for the autocomplete.\n     * @param {Object} state The state variables for the autocomplete.\n     * @param {JQuery} originalSelect The JQuery object matching the hidden select list.\n     * @param {Object} ajaxHandler This is a module that does the ajax fetch and translates the results.\n     * @return {Promise}\n     */\n    var updateAjax = function(e, options, state, originalSelect, ajaxHandler) {\n        var pendingPromise = addPendingJSPromise('updateAjax');\n        // We need to show the indicator outside of the hidden select list.\n        // So we get the parent id of the hidden select list.\n        var parentElement = $(document.getElementById(state.selectId)).parent();\n        LoadingIcon.addIconToContainerRemoveOnCompletion(parentElement, pendingPromise);\n\n        // Get the query to pass to the ajax function.\n        var query = $(e.currentTarget).val();\n        // Call the transport function to do the ajax (name taken from Select2).\n        ajaxHandler.transport(options.selector, query, function(results) {\n            // We got a result - pass it through the translator before using it.\n            var processedResults = ajaxHandler.processResults(options.selector, results);\n            var existingValues = [];\n\n            // Now destroy all options that are not currently selected.\n            if (!options.multiple) {\n                originalSelect.children('option').remove();\n            }\n            originalSelect.children('option').each(function(optionIndex, option) {\n                option = $(option);\n                if (!option.prop('selected')) {\n                    option.remove();\n                } else {\n                    existingValues.push(String(option.attr('value')));\n                }\n            });\n\n            if (!options.multiple && originalSelect.children('option').length === 0) {\n                // If this is a single select - and there are no current options\n                // the first option added will be selected by the browser. This causes a bug!\n                // We need to insert an empty option so that none of the real options are selected.\n                var option = $('<option>');\n                originalSelect.append(option);\n            }\n            if ($.isArray(processedResults)) {\n                // Add all the new ones returned from ajax.\n                $.each(processedResults, function(resultIndex, result) {\n                    if (existingValues.indexOf(String(result.value)) === -1) {\n                        var option = $('<option>');\n                        option.append(result.label);\n                        option.attr('value', result.value);\n                        originalSelect.append(option);\n                    }\n                });\n                originalSelect.attr('data-notice', '');\n            } else {\n                // The AJAX handler returned a string instead of the array.\n                originalSelect.attr('data-notice', processedResults);\n            }\n            // Update the list of suggestions now from the new values in the select list.\n            pendingPromise.resolve(updateSuggestions(options, state, '', originalSelect));\n        }, function(error) {\n            pendingPromise.reject(error);\n        });\n\n        return pendingPromise;\n    };\n\n    /**\n     * Add all the event listeners required for keyboard nav, blur clicks etc.\n     *\n     * @method addNavigation\n     * @private\n     * @param {Object} options The options used to create this autocomplete element.\n     * @param {Object} state State variables for this autocomplete element.\n     * @param {JQuery} originalSelect The JQuery object matching the hidden select list.\n     */\n    var addNavigation = function(options, state, originalSelect) {\n        // Start with the input element.\n        var inputElement = $(document.getElementById(state.inputId));\n        // Add keyboard nav with keydown.\n        inputElement.on('keydown', function(e) {\n            var pendingJsPromise = addPendingJSPromise('addNavigation-' + state.inputId + '-' + e.keyCode);\n\n            switch (e.keyCode) {\n                case KEYS.DOWN:\n                    // If the suggestion list is open, move to the next item.\n                    if (!options.showSuggestions) {\n                        // Do not consume this event.\n                        pendingJsPromise.resolve();\n                        return true;\n                    } else if (inputElement.attr('aria-expanded') === \"true\") {\n                        pendingJsPromise.resolve(activateNextItem(state));\n                    } else {\n                        // Handle ajax population of suggestions.\n                        if (!inputElement.val() && options.ajax) {\n                            require([options.ajax], function(ajaxHandler) {\n                                pendingJsPromise.resolve(updateAjax(e, options, state, originalSelect, ajaxHandler));\n                            });\n                        } else {\n                            // Open the suggestions list.\n                            pendingJsPromise.resolve(updateSuggestions(options, state, inputElement.val(), originalSelect));\n                        }\n                    }\n                    // We handled this event, so prevent it.\n                    e.preventDefault();\n                    return false;\n                case KEYS.UP:\n                    // Choose the previous active item.\n                    pendingJsPromise.resolve(activatePreviousItem(state));\n\n                    // We handled this event, so prevent it.\n                    e.preventDefault();\n                    return false;\n                case KEYS.ENTER:\n                    var suggestionsElement = $(document.getElementById(state.suggestionsId));\n                    if ((inputElement.attr('aria-expanded') === \"true\") &&\n                            (suggestionsElement.children('[aria-selected=true]').length > 0)) {\n                        // If the suggestion list has an active item, select it.\n                        pendingJsPromise.resolve(selectCurrentItem(options, state, originalSelect));\n                    } else if (options.tags) {\n                        // If tags are enabled, create a tag.\n                        pendingJsPromise.resolve(createItem(options, state, originalSelect));\n                    } else {\n                        pendingJsPromise.resolve();\n                    }\n\n                    // We handled this event, so prevent it.\n                    e.preventDefault();\n                    return false;\n                case KEYS.ESCAPE:\n                    if (inputElement.attr('aria-expanded') === \"true\") {\n                        // If the suggestion list is open, close it.\n                        pendingJsPromise.resolve(closeSuggestions(state));\n                    } else {\n                        pendingJsPromise.resolve();\n                    }\n                    // We handled this event, so prevent it.\n                    e.preventDefault();\n                    return false;\n            }\n            pendingJsPromise.resolve();\n            return true;\n        });\n        // Support multi lingual COMMA keycode (44).\n        inputElement.on('keypress', function(e) {\n\n            if (e.keyCode === KEYS.COMMA) {\n                if (options.tags) {\n                    // If we are allowing tags, comma should create a tag (or enter).\n                    addPendingJSPromise('keypress-' + e.keyCode)\n                    .resolve(createItem(options, state, originalSelect));\n                }\n                // We handled this event, so prevent it.\n                e.preventDefault();\n                return false;\n            }\n            return true;\n        });\n        // Support submitting the form without leaving the autocomplete element,\n        // or submitting too quick before the blur handler action is completed.\n        inputElement.closest('form').on('submit', function() {\n            if (options.tags) {\n                // If tags are enabled, create a tag.\n                addPendingJSPromise('form-autocomplete-submit')\n                .resolve(createItem(options, state, originalSelect));\n            }\n\n            return true;\n        });\n        inputElement.on('blur', function() {\n            var pendingPromise = addPendingJSPromise('form-autocomplete-blur');\n            window.setTimeout(function() {\n                // Get the current element with focus.\n                var focusElement = $(document.activeElement);\n                var timeoutPromise = $.Deferred();\n\n                // Only close the menu if the input hasn't regained focus and if the element still exists,\n                // and regain focus if the scrollbar is clicked.\n                // Due to the half a second delay, it is possible that the input element no longer exist\n                // by the time this code is being executed.\n                if (focusElement.is(document.getElementById(state.suggestionsId))) {\n                    inputElement.focus(); // Probably the scrollbar is clicked. Regain focus.\n                } else if (!focusElement.is(inputElement) && $(document.getElementById(state.inputId)).length) {\n                    if (options.tags) {\n                        timeoutPromise.then(function() {\n                            return createItem(options, state, originalSelect);\n                        })\n                        .catch();\n                    }\n                    timeoutPromise.then(function() {\n                        return closeSuggestions(state);\n                    })\n                    .catch();\n                }\n\n                timeoutPromise.then(function() {\n                    return pendingPromise.resolve();\n                })\n                .catch();\n                timeoutPromise.resolve();\n            }, 500);\n        });\n        if (options.showSuggestions) {\n            var arrowElement = $(document.getElementById(state.downArrowId));\n            arrowElement.on('click', function(e) {\n                var pendingPromise = addPendingJSPromise('form-autocomplete-show-suggestions');\n\n                // Prevent the close timer, or we will open, then close the suggestions.\n                inputElement.focus();\n\n                // Handle ajax population of suggestions.\n                if (!inputElement.val() && options.ajax) {\n                    require([options.ajax], function(ajaxHandler) {\n                        pendingPromise.resolve(updateAjax(e, options, state, originalSelect, ajaxHandler));\n                    });\n                } else {\n                    // Else - open the suggestions list.\n                    pendingPromise.resolve(updateSuggestions(options, state, inputElement.val(), originalSelect));\n                }\n            });\n        }\n\n        var suggestionsElement = $(document.getElementById(state.suggestionsId));\n        // Remove any click handler first.\n        suggestionsElement.parent().prop(\"onclick\", null).off(\"click\");\n        suggestionsElement.parent().on('click', '[role=option]', function(e) {\n            var pendingPromise = addPendingJSPromise('form-autocomplete-parent');\n            // Handle clicks on suggestions.\n            var element = $(e.currentTarget).closest('[role=option]');\n            var suggestionsElement = $(document.getElementById(state.suggestionsId));\n            // Find the index of the clicked on suggestion.\n            var current = suggestionsElement.children('[aria-hidden=false]').index(element);\n\n            // Activate it.\n            activateItem(current, state)\n            .then(function() {\n                // And select it.\n                return selectCurrentItem(options, state, originalSelect);\n            })\n            .then(function() {\n                return pendingPromise.resolve();\n            })\n            .catch();\n        });\n        var selectionElement = $(document.getElementById(state.selectionId));\n        // Handle clicks on the selected items (will unselect an item).\n        selectionElement.on('click', '[role=listitem]', function(e) {\n            var pendingPromise = addPendingJSPromise('form-autocomplete-clicks');\n\n            // Remove it from the selection.\n            pendingPromise.resolve(deselectItem(options, state, $(e.currentTarget), originalSelect));\n        });\n        // Remove the highlight of items when user tabs out the tag list.\n        selectionElement.on('blur', function(e) {\n            e.preventDefault();\n            $(this).children().attr('data-active-selection', false).attr('id', '');\n        });\n        // When tag list is focused, highlight the first item.\n        selectionElement.on('focus', function(e) {\n            e.preventDefault();\n            var element = $(this).children('[data-active-selection=true]');\n            if (element && element.length === 0) {\n                activateNextSelection(state);\n            }\n        });\n        // Keyboard navigation for the selection list.\n        selectionElement.on('keydown', function(e) {\n            var pendingPromise = addPendingJSPromise('form-autocomplete-keydown-' + e.keyCode);\n            switch (e.keyCode) {\n                case KEYS.RIGHT:\n                case KEYS.DOWN:\n                    // We handled this event, so prevent it.\n                    e.preventDefault();\n\n                    // Choose the next selection item.\n                    pendingPromise.resolve(activateNextSelection(state));\n                    return false;\n                case KEYS.LEFT:\n                case KEYS.UP:\n                    // We handled this event, so prevent it.\n                    e.preventDefault();\n\n                    // Choose the previous selection item.\n                    pendingPromise.resolve(activatePreviousSelection(state));\n                    return false;\n                case KEYS.SPACE:\n                case KEYS.ENTER:\n                    // Get the item that is currently selected.\n                    var selectedItem = $(document.getElementById(state.selectionId)).children('[data-active-selection=true]');\n                    if (selectedItem) {\n                        e.preventDefault();\n\n                        // Unselect this item.\n                        pendingPromise.resolve(deselectItem(options, state, selectedItem, originalSelect));\n                    }\n                    return false;\n            }\n\n            // Not handled. Resolve the promise.\n            pendingPromise.resolve();\n            return true;\n        });\n        // Whenever the input field changes, update the suggestion list.\n        if (options.showSuggestions) {\n            // Store the value of the field as its last value, when the field gains focus.\n            inputElement.on('focus', function(e) {\n                var query = $(e.currentTarget).val();\n                $(e.currentTarget).data('last-value', query);\n            });\n\n            // If this field uses ajax, set it up.\n            if (options.ajax) {\n                require([options.ajax], function(ajaxHandler) {\n                    // Creating throttled handlers free of race conditions, and accurate.\n                    // This code keeps track of a throttleTimeout, which is periodically polled.\n                    // Once the throttled function is executed, the fact that it is running is noted.\n                    // If a subsequent request comes in whilst it is running, this request is re-applied.\n                    var throttleTimeout = null;\n                    var inProgress = false;\n                    var pendingKey = 'autocomplete-throttledhandler';\n                    var handler = function(e) {\n                        // Empty the current timeout.\n                        throttleTimeout = null;\n\n                        // Mark this request as in-progress.\n                        inProgress = true;\n\n                        // Process the request.\n                        updateAjax(e, options, state, originalSelect, ajaxHandler)\n                        .then(function() {\n                            // Check if the throttleTimeout is still empty.\n                            // There's a potential condition whereby the JS request takes long enough to complete that\n                            // another task has been queued.\n                            // In this case another task will be kicked off and we must wait for that before marking htis as\n                            // complete.\n                            if (null === throttleTimeout) {\n                                // Mark this task as complete.\n                                M.util.js_complete(pendingKey);\n                            }\n                            inProgress = false;\n\n                            return arguments[0];\n                        })\n                        .catch(notification.exception);\n                    };\n\n                    // For input events, we do not want to trigger many, many updates.\n                    var throttledHandler = function(e) {\n                        window.clearTimeout(throttleTimeout);\n                        if (inProgress) {\n                            // A request is currently ongoing.\n                            // Delay this request another 100ms.\n                            throttleTimeout = window.setTimeout(throttledHandler.bind(this, e), 100);\n                            return;\n                        }\n\n                        if (throttleTimeout === null) {\n                            // There is currently no existing timeout handler, and it has not been recently cleared, so\n                            // this is the start of a throttling check.\n                            M.util.js_pending(pendingKey);\n                        }\n\n                        // There is currently no existing timeout handler, and it has not been recently cleared, so this\n                        // is the start of a throttling check.\n                        // Queue a call to the handler.\n                        throttleTimeout = window.setTimeout(handler.bind(this, e), 300);\n                    };\n\n                    // Trigger an ajax update after the text field value changes.\n                    inputElement.on('input', function(e) {\n                        var query = $(e.currentTarget).val();\n                        var last = $(e.currentTarget).data('last-value');\n                        // IE11 fires many more input events than required - even when the value has not changed.\n                        if (last !== query) {\n                            throttledHandler(e);\n                        }\n                        $(e.currentTarget).data('last-value', query);\n                    });\n                });\n            } else {\n                inputElement.on('input', function(e) {\n                    var query = $(e.currentTarget).val();\n                    var last = $(e.currentTarget).data('last-value');\n                    // IE11 fires many more input events than required - even when the value has not changed.\n                    // We need to only do this for real value changed events or the suggestions will be\n                    // unclickable on IE11 (because they will be rebuilt before the click event fires).\n                    // Note - because of this we cannot close the list when the query is empty or it will break\n                    // on IE11.\n                    if (last !== query) {\n                        updateSuggestions(options, state, query, originalSelect);\n                    }\n                    $(e.currentTarget).data('last-value', query);\n                });\n            }\n        }\n    };\n\n    /**\n     * Create and return an unresolved Promise for some pending JS.\n     *\n     * @param   {String} key The unique identifier for this promise\n     * @return  {Promise}\n     */\n    var addPendingJSPromise = function(key) {\n            var pendingKey = 'form-autocomplete:' + key;\n\n            M.util.js_pending(pendingKey);\n\n            var pendingPromise = $.Deferred();\n\n            pendingPromise\n            .then(function() {\n                M.util.js_complete(pendingKey);\n\n                return arguments[0];\n            })\n            .catch(notification.exception);\n\n            return pendingPromise;\n    };\n\n    return /** @alias module:core/form-autocomplete */ {\n        // Public variables and functions.\n        /**\n         * Turn a boring select box into an auto-complete beast.\n         *\n         * @method enhance\n         * @param {string} selector The selector that identifies the select box.\n         * @param {boolean} tags Whether to allow support for tags (can define new entries).\n         * @param {string} ajax Name of an AMD module to handle ajax requests. If specified, the AMD\n         *                      module must expose 2 functions \"transport\" and \"processResults\".\n         *                      These are modeled on Select2 see: https://select2.github.io/options.html#ajax\n         * @param {String} placeholder - The text to display before a selection is made.\n         * @param {Boolean} caseSensitive - If search has to be made case sensitive.\n         * @param {Boolean} showSuggestions - If suggestions should be shown\n         * @param {String} noSelectionString - Text to display when there is no selection\n         * @param {Boolean} closeSuggestionsOnSelect - Whether to close the suggestions immediately after making a selection.\n         * @return {Promise}\n         */\n        enhance: function(selector, tags, ajax, placeholder, caseSensitive, showSuggestions, noSelectionString,\n                          closeSuggestionsOnSelect) {\n            // Set some default values.\n            var options = {\n                selector: selector,\n                tags: false,\n                ajax: false,\n                placeholder: placeholder,\n                caseSensitive: false,\n                showSuggestions: true,\n                noSelectionString: noSelectionString\n            };\n            var pendingKey = 'autocomplete-setup-' + selector;\n            M.util.js_pending(pendingKey);\n            if (typeof tags !== \"undefined\") {\n                options.tags = tags;\n            }\n            if (typeof ajax !== \"undefined\") {\n                options.ajax = ajax;\n            }\n            if (typeof caseSensitive !== \"undefined\") {\n                options.caseSensitive = caseSensitive;\n            }\n            if (typeof showSuggestions !== \"undefined\") {\n                options.showSuggestions = showSuggestions;\n            }\n            if (typeof noSelectionString === \"undefined\") {\n                str.get_string('noselection', 'form').done(function(result) {\n                    options.noSelectionString = result;\n                }).fail(notification.exception);\n            }\n\n            // Look for the select element.\n            var originalSelect = $(selector);\n            if (!originalSelect) {\n                log.debug('Selector not found: ' + selector);\n                M.util.js_complete(pendingKey);\n                return false;\n            }\n\n            originalSelect.css('visibility', 'hidden').attr('aria-hidden', true);\n\n            // Hide the original select.\n\n            // Find or generate some ids.\n            var state = {\n                selectId: originalSelect.attr('id'),\n                inputId: 'form_autocomplete_input-' + uniqueId,\n                suggestionsId: 'form_autocomplete_suggestions-' + uniqueId,\n                selectionId: 'form_autocomplete_selection-' + uniqueId,\n                downArrowId: 'form_autocomplete_downarrow-' + uniqueId\n            };\n\n            // Increment the unique counter so we don't get duplicates ever.\n            uniqueId++;\n\n            options.multiple = originalSelect.attr('multiple');\n            if (!options.multiple) {\n                // If this is a single select then there is no way to de-select the current value -\n                // unless we add a bogus blank option to be selected when nothing else is.\n                // This matches similar code in updateAjax above.\n                originalSelect.prepend('<option>');\n            }\n\n            if (typeof closeSuggestionsOnSelect !== \"undefined\") {\n                options.closeSuggestionsOnSelect = closeSuggestionsOnSelect;\n            } else {\n                // If not specified, this will close suggestions by default for single-select elements only.\n                options.closeSuggestionsOnSelect = !options.multiple;\n            }\n\n            var originalLabel = $('[for=' + state.selectId + ']');\n            // Create the new markup and insert it after the select.\n            var suggestions = [];\n            originalSelect.children('option').each(function(index, option) {\n                suggestions[index] = {label: option.innerHTML, value: $(option).attr('value')};\n            });\n\n            // Render all the parts of our UI.\n            var context = $.extend({}, options, state);\n            context.options = suggestions;\n            context.items = [];\n\n            // Collect rendered inline JS to be executed once the HTML is shown.\n            var collectedjs = '';\n\n            var renderInput = templates.render('core/form_autocomplete_input', context).then(function(html, js) {\n                collectedjs += js;\n                return html;\n            });\n\n            var renderDatalist = templates.render('core/form_autocomplete_suggestions', context).then(function(html, js) {\n                collectedjs += js;\n                return html;\n            });\n\n            var renderSelection = templates.render('core/form_autocomplete_selection', context).then(function(html, js) {\n                collectedjs += js;\n                return html;\n            });\n\n            return $.when(renderInput, renderDatalist, renderSelection)\n            .then(function(input, suggestions, selection) {\n                originalSelect.hide();\n\n                // Ensure that the data-fieldtype is set for behat.\n                $(input).find('input').attr('data-fieldtype', 'autocomplete');\n\n                originalSelect.after(suggestions);\n                originalSelect.after(input);\n                originalSelect.after(selection);\n\n                templates.runTemplateJS(collectedjs);\n\n                // Update the form label to point to the text input.\n                originalLabel.attr('for', state.inputId);\n                // Add the event handlers.\n                addNavigation(options, state, originalSelect);\n\n                var suggestionsElement = $(document.getElementById(state.suggestionsId));\n                // Hide the suggestions by default.\n                suggestionsElement.hide().attr('aria-hidden', true);\n\n                return;\n            })\n            .then(function() {\n                // Show the current values in the selection list.\n                return updateSelectionList(options, state, originalSelect);\n            })\n            .then(function() {\n                return M.util.js_complete(pendingKey);\n            })\n            .catch(function(error) {\n                M.util.js_complete(pendingKey);\n                notification.exception(error);\n            });\n        }\n    };\n});\n"],"file":"form-autocomplete.min.js"}
>>>>>>> upstream/MOODLE_38_STABLE
