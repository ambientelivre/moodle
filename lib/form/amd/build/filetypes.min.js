<<<<<<< HEAD
/**
 * This module allows to enhance the form elements MoodleQuickForm_filetypes
 *
 * @module     core_form/filetypes
 * @copyright  2017 David Mudrak <david@moodle.com>
 * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later
 * @since      3.3
 */
define("core_form/filetypes",["jquery","core/log","core/modal_events","core/modal_save_cancel","core/ajax","core/templates","core/tree"],(function($,Log,ModalEvents,ModalSaveCancel,Ajax,Templates,Tree){var FileTypes=function(elementId,elementLabel,onlyTypes,allowAll){this.elementId=elementId,this.elementLabel=elementLabel,this.onlyTypes=onlyTypes,this.allowAll=allowAll,this.inputField=$("#"+elementId),this.wrapperBrowserTrigger=$('[data-filetypesbrowser="'+elementId+'"]'),this.wrapperDescriptions=$('[data-filetypesdescriptions="'+elementId+'"]'),this.wrapperBrowserTrigger.length&&(this.inputField.length&&this.wrapperDescriptions.length?this.prepareBrowserTrigger().then(function(){return this.prepareBrowserModal()}.bind(this)).then(function(){return this.prepareBrowserTree()}.bind(this)):Log.error("core_form/filetypes: Unexpected DOM structure, unable to enhance filetypes field "+elementId))};return FileTypes.prototype.prepareBrowserTrigger=function(){return Templates.render("core_form/filetypes-trigger",{}).then(function(html){this.wrapperBrowserTrigger.html(html),this.browserTrigger=this.wrapperBrowserTrigger.find('[data-filetypeswidget="browsertrigger"]')}.bind(this))},FileTypes.prototype.prepareBrowserModal=function(){return ModalSaveCancel.create({title:this.elementLabel}).then(function(modal){return this.browserModal=modal,modal}.bind(this)).then(function(){this.browserModal.getRoot().on(ModalEvents.hidden,function(){this.browserTrigger.focus()}.bind(this)),this.browserModal.getRoot().on(ModalEvents.save,function(){this.saveBrowserModal()}.bind(this))}.bind(this))},FileTypes.prototype.prepareBrowserTree=function(){return this.browserTrigger.on("click",function(e){if(e.preventDefault(),!this.inputField.is("[disabled]")){var bodyContent=this.loadBrowserModalBody();bodyContent.then(function(){this.browserTree=new Tree(this.browserModal.getBody()),this.browserTree.handleKeyDown=function(item,e){e.keyCode==this.browserTree.keys.enter||e.keyCode==this.browserTree.keys.space?(e.preventDefault(),e.stopPropagation(),this.toggleCheckbox(item.attr("data-filetypesbrowserkey"))):Tree.prototype.handleKeyDown.call(this.browserTree,item,e)}.bind(this),this.allowAll&&(this.hideOrShowItemsDependingOnAllowAll(this.browserModal.getRoot().find('input[type="checkbox"][data-filetypesbrowserkey="*"]').first()),this.browserModal.getRoot().on("change",'input[type="checkbox"][data-filetypesbrowserkey="*"]',function(e){this.hideOrShowItemsDependingOnAllowAll($(e.currentTarget))}.bind(this))),this.browserModal.getRoot().on("change",'input[type="checkbox"][data-filetypesbrowserkey]',function(e){var checkbox=$(e.currentTarget),key=checkbox.attr("data-filetypesbrowserkey");this.browserModal.getRoot().find('input[type="checkbox"][data-filetypesbrowserkey="'+key+'"]').prop("checked",checkbox.prop("checked"))}.bind(this))}.bind(this)).then(function(){this.browserModal.show()}.bind(this)),this.browserModal.setBody(bodyContent)}}.bind(this)),$.when()},FileTypes.prototype.loadBrowserModalBody=function(){var args={onlytypes:this.onlyTypes.join(),allowall:this.allowAll,current:this.inputField.val()};return Ajax.call([{methodname:"core_form_get_filetypes_browser_data",args:args}])[0].then(function(browserData){return Templates.render("core_form/filetypes-browser",{elementid:this.elementId,groups:browserData.groups})}.bind(this))},FileTypes.prototype.toggleCheckbox=function(key){var checkbox=this.browserModal.getRoot().find('input[type="checkbox"][data-filetypesbrowserkey="'+key+'"]').first();checkbox.prop("checked",!checkbox.prop("checked"))},FileTypes.prototype.saveBrowserModal=function(){if(this.allowAll){var allcheckbox=this.browserModal.getRoot().find('input[type="checkbox"][data-filetypesbrowserkey="*"]');if(allcheckbox.length&&allcheckbox.prop("checked"))return this.inputField.val("*"),void this.updateDescriptions(["*"])}var newvalue=[];this.browserModal.getRoot().find('input[type="checkbox"]').each((function(){var checkbox=$(this),key=checkbox.attr("data-filetypesbrowserkey");checkbox.prop("checked")&&newvalue.push(key)})),newvalue=newvalue.filter((function(x,i,a){return a.indexOf(x)==i})),this.inputField.val(newvalue.join(" ")),this.updateDescriptions(newvalue)},FileTypes.prototype.updateDescriptions=function(keys){var descriptions=[];keys.forEach(function(key){descriptions.push({description:this.browserModal.getRoot().find('[data-filetypesname="'+key+'"]').first().text().trim(),extensions:this.browserModal.getRoot().find('[data-filetypesextensions="'+key+'"]').first().text().trim()})}.bind(this));var templatedata={hasdescriptions:descriptions.length>0,descriptions:descriptions};return Templates.render("core_form/filetypes-descriptions",templatedata).then(function(html){this.wrapperDescriptions.html(html)}.bind(this))},FileTypes.prototype.hideOrShowItemsDependingOnAllowAll=function(allcheckbox){var others=this.browserModal.getRoot().find('[role="treeitem"][data-filetypesbrowserkey!="*"]');allcheckbox.prop("checked")?others.hide():others.show()},{init:function(elementId,elementLabel,onlyTypes,allowAll){new FileTypes(elementId,elementLabel,onlyTypes,allowAll)}}}));

//# sourceMappingURL=filetypes.min.js.map
=======
define ("core_form/filetypes",["jquery","core/log","core/str","core/modal_factory","core/modal_events","core/ajax","core/templates","core/tree"],function(a,b,c,d,e,f,g,h){"use strict";var i=function(c,d,e,f){this.elementId=c;this.elementLabel=d;this.onlyTypes=e;this.allowAll=f;this.inputField=a("#"+c);this.wrapperBrowserTrigger=a("[data-filetypesbrowser=\""+c+"\"]");this.wrapperDescriptions=a("[data-filetypesdescriptions=\""+c+"\"]");if(!this.wrapperBrowserTrigger.length){return}if(!this.inputField.length||!this.wrapperDescriptions.length){b.error("core_form/filetypes: Unexpected DOM structure, unable to enhance filetypes field "+c);return}this.prepareBrowserTrigger().then(function(){return this.prepareBrowserModal()}.bind(this)).then(function(){return this.prepareBrowserTree()}.bind(this))};i.prototype.prepareBrowserTrigger=function(){return g.render("core_form/filetypes-trigger",{}).then(function(a){this.wrapperBrowserTrigger.html(a);this.browserTrigger=this.wrapperBrowserTrigger.find("[data-filetypeswidget=\"browsertrigger\"]")}.bind(this))};i.prototype.prepareBrowserModal=function(){return d.create({type:d.types.SAVE_CANCEL,title:this.elementLabel}).then(function(a){this.browserModal=a}.bind(this)).then(function(){this.browserModal.getRoot().on(e.hidden,function(){this.browserTrigger.focus()}.bind(this));this.browserModal.getRoot().on(e.save,function(){this.saveBrowserModal()}.bind(this))}.bind(this))};i.prototype.prepareBrowserTree=function(){this.browserTrigger.on("click",function(b){b.preventDefault();if(this.inputField.is("[disabled]")){return}var c=this.loadBrowserModalBody();c.then(function(){this.browserTree=new h(this.browserModal.getBody());this.browserTree.handleKeyDown=function(a,b){if(b.keyCode==this.browserTree.keys.enter||b.keyCode==this.browserTree.keys.space){b.preventDefault();b.stopPropagation();this.toggleCheckbox(a.attr("data-filetypesbrowserkey"))}else{h.prototype.handleKeyDown.call(this.browserTree,a,b)}}.bind(this);if(this.allowAll){this.hideOrShowItemsDependingOnAllowAll(this.browserModal.getRoot().find("input[type=\"checkbox\"][data-filetypesbrowserkey=\"*\"]").first());this.browserModal.getRoot().on("change","input[type=\"checkbox\"][data-filetypesbrowserkey=\"*\"]",function(b){this.hideOrShowItemsDependingOnAllowAll(a(b.currentTarget))}.bind(this))}this.browserModal.getRoot().on("change","input[type=\"checkbox\"][data-filetypesbrowserkey]",function(b){var c=a(b.currentTarget),d=c.attr("data-filetypesbrowserkey");this.browserModal.getRoot().find("input[type=\"checkbox\"][data-filetypesbrowserkey=\""+d+"\"]").prop("checked",c.prop("checked"))}.bind(this))}.bind(this)).then(function(){this.browserModal.show()}.bind(this));this.browserModal.setBody(c)}.bind(this));return a.when()};i.prototype.loadBrowserModalBody=function(){var a={onlytypes:this.onlyTypes.join(),allowall:this.allowAll,current:this.inputField.val()};return f.call([{methodname:"core_form_get_filetypes_browser_data",args:a}])[0].then(function(a){return g.render("core_form/filetypes-browser",{elementid:this.elementId,groups:a.groups})}.bind(this))};i.prototype.toggleCheckbox=function(a){var b=this.browserModal.getRoot().find("input[type=\"checkbox\"][data-filetypesbrowserkey=\""+a+"\"]").first();b.prop("checked",!b.prop("checked"))};i.prototype.saveBrowserModal=function(){if(this.allowAll){var b=this.browserModal.getRoot().find("input[type=\"checkbox\"][data-filetypesbrowserkey=\"*\"]");if(b.length&&b.prop("checked")){this.inputField.val("*");this.updateDescriptions(["*"]);return}}var c=[];this.browserModal.getRoot().find("input[type=\"checkbox\"]").each(function(){var b=a(this),d=b.attr("data-filetypesbrowserkey");if(b.prop("checked")){c.push(d)}});c=c.filter(function(b,c,d){return d.indexOf(b)==c});this.inputField.val(c.join(" "));this.updateDescriptions(c)};i.prototype.updateDescriptions=function(a){var b=[];a.forEach(function(a){b.push({description:this.browserModal.getRoot().find("[data-filetypesname=\""+a+"\"]").first().text().trim(),extensions:this.browserModal.getRoot().find("[data-filetypesextensions=\""+a+"\"]").first().text().trim()})}.bind(this));var c={hasdescriptions:0<b.length,descriptions:b};return g.render("core_form/filetypes-descriptions",c).then(function(a){this.wrapperDescriptions.html(a)}.bind(this))};i.prototype.hideOrShowItemsDependingOnAllowAll=function(a){var b=this.browserModal.getRoot().find("[role=\"treeitem\"][data-filetypesbrowserkey!=\"*\"]");if(a.prop("checked")){b.hide()}else{b.show()}};return{init:function init(a,b,c,d){new i(a,b,c,d)}}});
//# sourceMappingURL=filetypes.min.js.map
>>>>>>> upstream/MOODLE_38_STABLE
